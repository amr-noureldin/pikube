# entry point for creating new SSL Cartificate Authority
# https://github.com/githubixx/ansible-role-kubernetes-ca
# https://github.com/mmumshad/kubernetes-the-hard-way/blob/master/docs/04-certificate-authority.md
- name: Create directory for certificates
  file:
    path: certificates
    state: directory

- name: Generate an OpenSSL 2048 bit private RSA key
  openssl_privatekey:
    path: "certificates/{{ cluster_name }}-kube-apiserver.key"
    size: 2048
    type: RSA

- name: Check if certificate authority exists
  stat:
    path: "certificates/{{ cluster_name }}-ca.key"
  register: ca_exists

- name: Generate an OpenSSL Certificate Signing Request
  openssl_csr:
    path: "certificates/{{ cluster_name }}-kube-apiserver.csr"
    privatekey_path: "certificates/{{ cluster_name }}-kube-apiserver.key"
    key_usage:
      - digitalSignature
      - nonRepudiation
      - keyAgreement
      - dataEncipherment
      - keyEncipherment
    extended_key_usage:
      - clientAuth
      - serverAuth
    subject: "CN=kube-apiserver/O=system:masters"
    subject_alt_name: "DNS:kubernetes,DNS:kubernetes.default,DNS:kubernetes.default.svc,DNS:kubernetes.default.svc.cluster,DNS:kubernetes.default.svc.cluster.local,{{ masters_ips }},{{ masters_names }},IP:127.0.0.1"
  when: ca_exists.stat.exists == True

- name: Sign the kube-apiserver key with CA to obtain kube-apiserver cert
  openssl_certificate:
    path: "certificates/{{ cluster_name }}-kube-apiserver.crt"
    csr_path: "certificates/{{ cluster_name }}-kube-apiserver.csr"
    ownca_path: "certificates/{{ cluster_name }}-ca.crt"
    ownca_privatekey_path: "certificates/{{ cluster_name }}-ca.key"
    provider: ownca
  when: ca_exists.stat.exists == True
