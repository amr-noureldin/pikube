# Install K8s binaries
# Documentation at
# https://github.com/kelseyhightower/kubernetes-the-hard-way/blob/master/docs/08-bootstrapping-kubernetes-controllers.md
# https://github.com/mmumshad/kubernetes-the-hard-way/blob/master/docs/08-bootstrapping-kubernetes-controllers.md

- name: Copy k8s binaries to /usr/local/bin
  become: true
  copy:
    src: "packages/k8s-{{ k8s_version }}-server/kubernetes/server/bin/{{ item }}"
    dest: /usr/local/bin
    owner: root
    group: root
    mode: '0755'
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: Create /var/lib/kubernetes/ directory
  become: true
  file:
    path: /var/lib/kubernetes/
    state: directory

- name: Copy certificates to k8s configuration
  become: true
  copy:
    src: "certificates/{{ item }}"
    dest: "/var/lib/kubernetes/{{ item }}"
    mode: '0644'
  with_items:
    - "{{ cluster_name }}-ca.crt"
    - "{{ cluster_name }}-kube-apiserver.crt"
    - "{{ cluster_name }}-kube-scheduler.crt"
    - "{{ cluster_name }}-service-account.crt"
    - "{{ cluster_name }}-etcd.crt"

- name: Copy keys to k8s configuration
  become: true
  copy:
    src: "certificates/{{ item }}"
    dest: "/var/lib/kubernetes/{{ item }}"
    mode: '0600'
  with_items:
    - "{{ cluster_name }}-ca.key"
    - "{{ cluster_name }}-kube-apiserver.key"
    - "{{ cluster_name }}-kube-scheduler.key"
    - "{{ cluster_name }}-service-account.key"
    - "{{ cluster_name }}-etcd.key"
    - "encryption-config.yaml"

- name: Assemble components for initial etcd cluster string
  set_fact:
    etcd_cluster_member: "https://{{ ansible_host }}:2379"

- name: Assemble etcd initial cluster string
  set_fact:
    etcd_initial_cluster: "{{ groups['etcd_hosts'] | map('extract', hostvars, ['etcd_cluster_member']) | join(',') }}"

- name: Copy systemctl service configurations to the node
  become: true
  template:
    src: "templates/{{ item }}.j2"
    dest: "/etc/systemd/system/{{ item }}"
  with_items:
    - kube-apiserver.service
    - kube-controller-manager.service
    - kube-scheduler.service

- name: Copy kubeconfig configurations to the node
  become: true
  copy:
    src: "configuration/{{ item }}.kubeconfig"
    dest: "/var/lib/kubernetes/{{ item }}.kubeconfig"
    mode: '0600'
  with_items:
    - kube-controller-manager
    - kube-scheduler
    - admin

- name: systemd reload
  become: true
  systemd:
    daemon_reload: yes

- name: enable systemctl services
  become: true
  systemd:
    enabled: yes
    masked: no
    name: "{{ item }}"
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: start systemctl services
  become: true
  systemd:
    state: restarted
    name: "{{ item }}"
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: Create  ~{{ deploy_user }}/.kube directory
  file:
    path: ~{{ deploy_user }}/.kube
    state: directory

- name: Copy admin kubeconfig to ~{{ deploy_user }}/.kube/config
  copy:
    src: configuration/admin.kubeconfig
    dest: ~{{ deploy_user }}/.kube/config
    mode: '0600'
