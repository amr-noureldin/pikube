# Adding the crio repository and install
# Documentation at
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/
# https://github.com/cri-o/cri-o
# https://medium.com/@raghwendrasingh1819/diy-kubernetes-cluster-with-cri-o-container-runtime-ubuntu-xenial-53e967c33dd9

- name: Enable the overlay module
  become: true
  lineinfile: 
    path: /etc/modules-load.d/modules.conf
    line: 'overlay'
    state: present

- name: Load the overlay module
  become: true
  modprobe:
    name: overlay
    state: present

- name: Enable the br_netfilter module
  become: true
  lineinfile: 
    path: /etc/modules-load.d/modules.conf
    line: 'br_netfilter'
    state: present

- name: Load the br_netfilter module
  become: true
  modprobe:
    name: br_netfilter
    state: present

- name: 99-kubernetes-cri.conf 1
  become: true
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
    reload: yes

- name: 99-kubernetes-cri.conf 2
  become: true
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
    reload: yes

- name: 99-kubernetes-cri.conf 3
  become: true
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
    reload: yes

- name: install docker
  become: true
  apt:
    name: docker.io
    state: present
    update_cache: yes

- name: Enable CPU accounting
  become: true
  lineinfile: 
    path: /etc/systemd/system.conf
    regexp: '#DefaultCPUAccounting=no' 
    line: 'DefaultCPUAccounting=yes'
    backrefs: yes # w/o this, the operation isn't idempotent'

- name: Enable BlockIO accounting
  become: true
  lineinfile: 
    path: /etc/systemd/system.conf
    regexp: '#DefaultBlockIOAccounting=no' 
    line: 'DefaultBlockIOAccounting=yes'
    backrefs: yes # w/o this, the operation isn't idempotent'

- name: add kubernetes apt-key
  become: true
  apt_key:
    url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    state: present

- name: add kubernetes-xenial repo
  become: true
  apt_repository:
    repo: 'deb https://apt.kubernetes.io/ kubernetes-xenial main'
    state: present
    filename: kubernetes.list
    update_cache: yes

- name: install kubernetes-cni
  become: true
  apt:
    name: kubernetes-cni
    state: present
    update_cache: yes

- name: Create directory for cni configuration
  become: true
  file:
    path: /etc/cni/net.d
    state: directory

- name: Create cni configuration files
  become: true
  template:
    src: templates/docker-cni-{{ item }}.j2
    dest: /etc/cni/net.d/{{ item }}
  with_items:
    - 10-bridge.conf
    - 99-loopback.conf

- name: Create directory for containerd configuration
  become: true
  file:
    path: /etc/containerd
    state: directory

- name: Create containerd configuration files
  become: true
  template:
    src: templates/docker-cni-containerd-config.toml.j2
    dest: /etc/containerd/config.toml

- name: Copy conatinerd.service configuration to the node
  become: true
  copy:
    src: templates/docker-cni-containerd_service.j2
    dest: /etc/systemd/system/containerd.service
    owner: root
    group: root

- name: systemd reload
  become: true
  systemd:
    daemon_reload: yes

- name: enable docker
  become: true
  systemd:
    enabled: yes
    name: docker
    masked: no

- name: start docker
  become: true
  systemd:
    state: restarted
    name: docker

- name: enable containerd
  become: true
  systemd:
    enabled: yes
    name: containerd
    masked: no

- name: start containerd
  become: true
  systemd:
    state: restarted
    name: containerd
